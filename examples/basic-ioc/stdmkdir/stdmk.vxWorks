
CPU=SIMNT
TOOL=gnu

include $(WIND_BASE)/target/h/make/defs.bsp
include $(WIND_BASE)/target/h/make/make.$(CPU)$(TOOL)
include $(WIND_BASE)/target/h/make/defs.$(WIND_HOST_TYPE)

MUNCH := $(subst \,/,$(MUNCH))
RM := vxrm.bat

DEBUG =

CCINCLUDES = -I$(POCOCAPSULE_DIR)/include
EXCEPT_FLAGS = -fno-exceptions

COMMONDEFS = -DVXWORKS -fno-builtin -fno-inline $(EXCEPT_FLAGS)

ADDED_C++FLAGS    = $(CCINCLUDES) $(DEBUG) $(COMMONDEFS)

LIB_SUFFIX = .so

POCO_PROJ=pxgenproxy -r=gather
POCO_ENCODE = pxencode

ifeq ($(CPU),SIMNT)
ADDED_C++FLAGS +=
endif

LD = ccsimpc -r -nostdlib

CFLAGS +=-fno-builtin -fdollars-in-identifiers

define LINK_SLIB
	$(LD) $(LD_PARTIAL_FLAGS) -o $@.tmp  $^
	$(NM) -g $@.tmp | $(MUNCH) > ctdt.c
	$(CC) -g -fdollars-in-identifiers -ansi $(CFLAGS) -c ctdt.c
	$(LD) $(LD_PARTIAL_FLAGS) -o $@ $@.tmp ctdt.o
	$(RM) *.tmp ctdt.*
endef

.o:
	$(LD) $(LD_PARTIAL_FLAGS) -o $@.tmp $^
	$(NM) $@.tmp | $(MUNCH) > ctdt.c
	$(CC) -ansi $(CFLAGS) -c ctdt.c
	$(LD) $(LD_PARTIAL_FLAGS) -o $@ $@.tmp ctdt.o
	@ $(RM) *.tmp ctdt.*

.C.o:
	$(CC) $(C++FLAGS) -c -o $@ $<

.c.o:
	$(CC) $(C++FLAGS) -c -o $@ $<

.cc.o:
	$(CC) $(C++FLAGS) -fno-dollars-in-identifiers -c -o $@ $<

%$(LIB_SUFFIX): %.o
	$(LINK_SLIB)

%.ctx: %.xml
	$(POCO_ENCODE) -s=.ctx $<

